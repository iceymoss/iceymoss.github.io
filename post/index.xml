<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on iceymoss - 刻意练习，卷无止境</title>
    <link>https://iceymoss.github.io/post/</link>
    <description>Recent content in Posts on iceymoss - 刻意练习，卷无止境</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 19 Aug 2023 16:04:41 +0800</lastBuildDate><atom:link href="https://iceymoss.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ES存储引擎 倒排索引</title>
      <link>https://iceymoss.github.io/post/es%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E-%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Sat, 19 Aug 2023 16:04:41 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/es%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E-%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95/</guid>
      <description>什么是倒排索引 当涉及倒排索引时，让我们使用一个简单的例子来说明。考虑以下三个文档的例子，这些文档代表了一些博客文章： 文档1： Title: Introduction to Elasticsearch Content: Elasticsearch is a</description>
    </item>
    
    <item>
      <title>记录 数据库分表之时间</title>
      <link>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E8%A1%A8%E4%B9%8B%E6%97%B6%E9%97%B4/</link>
      <pubDate>Sat, 19 Aug 2023 16:01:37 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E8%A1%A8%E4%B9%8B%E6%97%B6%E9%97%B4/</guid>
      <description>那怎么说，其实按照时间分表中，表与表之间除了DDL相同，其实并没有联系，本质上就是两个不同的表，通过时间逻辑而产生了联系？ 如果分表的表结构（</description>
    </item>
    
    <item>
      <title>记录 SQL关联查询和子查询</title>
      <link>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-sql%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%AD%90%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Sat, 19 Aug 2023 15:57:39 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-sql%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%AD%90%E6%9F%A5%E8%AF%A2/</guid>
      <description>问题描述 第一步，获取GUID： SELECT guid, SUBSTRING_INDEX( SUBSTRING_INDEX( extra, &amp;#39;idfa=&amp;#39;, - 1 ), &amp;#39;&amp;amp;&amp;#39;, 1 ) AS idfa FROM app_tiktok_install_list WHERE extra &amp;lt;&amp;gt; &amp;#39;&amp;#39;; 第二步： app_tiktok_install_list.guid= app_install_log.GUID 获取到app_install_log的GUID，SIEGU</description>
    </item>
    
    <item>
      <title>记录-在SQL中计算</title>
      <link>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-%E5%9C%A8sql%E4%B8%AD%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Sat, 19 Aug 2023 15:50:22 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-%E5%9C%A8sql%E4%B8%AD%E8%AE%A1%E7%AE%97/</guid>
      <description>场景 当有需求是这样的，我需要在表1中拿到某些数据(拿到每一条记录中两个字段的比值，然后再拿某一个字段的值)到表2中计算出对应的数据，并返回通</description>
    </item>
    
    <item>
      <title>记录 时间展示展示方案</title>
      <link>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-%E6%97%B6%E9%97%B4%E5%B1%95%E7%A4%BA%E5%B1%95%E7%A4%BA%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 19 Aug 2023 15:42:16 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E8%AE%B0%E5%BD%95-%E6%97%B6%E9%97%B4%E5%B1%95%E7%A4%BA%E5%B1%95%E7%A4%BA%E6%96%B9%E6%A1%88/</guid>
      <description>[toc] 场景 时间有三种类型： 1、长期 2、具体时间范围 3、周几展示 解决方案 1、长期：使用bool 2、具体范围：startTime-endTime 3、</description>
    </item>
    
    <item>
      <title>Pprof性能分析</title>
      <link>https://iceymoss.github.io/post/pprof%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 19 Aug 2023 15:35:20 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/pprof%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</guid>
      <description>[toc] 写在前面 pprof（性能剖析工具）是 Go 语言标准库中用于性能分析的工具。它可以帮助你了解程序在 CPU 和内存方面的性能表现，以便优化代码。使用 pp</description>
    </item>
    
    <item>
      <title>Go异步读取MySQL</title>
      <link>https://iceymoss.github.io/post/go%E5%BC%82%E6%AD%A5%E8%AF%BB%E5%8F%96mysql/</link>
      <pubDate>Sat, 19 Aug 2023 15:29:28 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/go%E5%BC%82%E6%AD%A5%E8%AF%BB%E5%8F%96mysql/</guid>
      <description>Go异步读取MySQL 有些使用我们面临在数据量很多的情况，例如之前在公司实习，就需要在多个6亿条记录的MySQL数据库中查询数据，面对这庞大</description>
    </item>
    
    <item>
      <title>列式数据库ClickHouse</title>
      <link>https://iceymoss.github.io/post/%E5%88%97%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93clickhouse/</link>
      <pubDate>Sat, 19 Aug 2023 15:16:20 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%88%97%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93clickhouse/</guid>
      <description>[toc] ClickHouse 介绍 ClickHouse是一种开源的列式数据库管理系统（DBMS），专门设计用于大规模数据分析。它以高性能和扩展性而闻名，并且被广泛应用</description>
    </item>
    
    <item>
      <title>快速学习Ansible工具</title>
      <link>https://iceymoss.github.io/post/%E5%BF%AB%E9%80%9F%E5%AD%A6%E4%B9%A0ansible%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 17 Jul 2023 18:07:35 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%BF%AB%E9%80%9F%E5%AD%A6%E4%B9%A0ansible%E5%B7%A5%E5%85%B7/</guid>
      <description>[toc] [toc] 写在前面 最近也是在公司因为业务需求而解到了Ansible工具，改工具能快速的帮助我们远程服务器上执行我们想执行的shell命令，想象一下</description>
    </item>
    
    <item>
      <title>Git多人协作开发</title>
      <link>https://iceymoss.github.io/post/git%E5%A4%9A%E4%BA%BA%E5%8D%8F%E4%BD%9C%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 28 Jun 2023 08:55:57 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/git%E5%A4%9A%E4%BA%BA%E5%8D%8F%E4%BD%9C%E5%BC%80%E5%8F%91/</guid>
      <description>[toc] 前言 相信很多同学在初入职场后，对于git使用场景不太熟悉，本文以我自己为视角出发在公司日常开发中使用git的流程，希望对你有帮助，如果您不</description>
    </item>
    
    <item>
      <title>基于Gokins自动化部署</title>
      <link>https://iceymoss.github.io/post/%E5%9F%BA%E4%BA%8Egokins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Sun, 25 Jun 2023 08:54:56 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%9F%BA%E4%BA%8Egokins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</guid>
      <description>[toc] 写在前面 最近在公司学习到一个新玩意-Gokins基于Golang开发的自动化构建工具， 在此之前我是使用有使用过Jenkins进行项目自动化</description>
    </item>
    
    <item>
      <title>分布式锁实现方案</title>
      <link>https://iceymoss.github.io/post/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 31 May 2023 19:56:55 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</guid>
      <description>[toc] 前言 分布式锁 悲观锁与乐观锁是人们定义出来的概念，你可以理解为一种思想，是处理并发资源的常用手段。 不要把他们与mysql中提供的锁机制(表锁</description>
    </item>
    
    <item>
      <title>基于mysql分布式悲观锁原理</title>
      <link>https://iceymoss.github.io/post/%E5%9F%BA%E4%BA%8Emysql%E5%88%86%E5%B8%83%E5%BC%8F%E6%82%B2%E8%A7%82%E9%94%81%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 31 May 2023 19:40:53 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%9F%BA%E4%BA%8Emysql%E5%88%86%E5%B8%83%E5%BC%8F%E6%82%B2%E8%A7%82%E9%94%81%E5%8E%9F%E7%90%86/</guid>
      <description>[toc] MySQL分布式悲观锁原理： 条件 FOR UPDATE 仅适用于InnoDB存储引擎，且必须在事务区块(BEGIN/COMMIT)中才能生效。 mysql默认情</description>
    </item>
    
    <item>
      <title>配置中心nacos</title>
      <link>https://iceymoss.github.io/post/%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83nacos/</link>
      <pubDate>Wed, 31 May 2023 19:37:31 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83nacos/</guid>
      <description>[toc] 文章介绍 本文我们将以golang的角度来了解配置中心，nacos的安装，如何用nacos做配置，读取nacos中配置文件。 什么是配置中心 用</description>
    </item>
    
    <item>
      <title>消息队列之rocketMQ</title>
      <link>https://iceymoss.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B9%8Brocketmq/</link>
      <pubDate>Wed, 31 May 2023 19:32:54 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B9%8Brocketmq/</guid>
      <description>[TOC] 文章介绍 本文来简单介绍一下消息队列 ，这里将什么是MQ, 介绍RocketMQ的安装，RocketMQ的基本概念，消息类型，并使用go做各类消</description>
    </item>
    
    <item>
      <title>一篇学会Git</title>
      <link>https://iceymoss.github.io/post/%E4%B8%80%E7%AF%87%E5%AD%A6%E4%BC%9Agit/</link>
      <pubDate>Thu, 25 May 2023 21:04:02 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E4%B8%80%E7%AF%87%E5%AD%A6%E4%BC%9Agit/</guid>
      <description>[toc] 介绍 相信很多朋友都知道全球最大的代码托管平台GitHub，对于开发人员来而言就更不要说了，尤其是刚接触编程的朋友来说，登GitHub这类托</description>
    </item>
    
    <item>
      <title>参数配置之viper</title>
      <link>https://iceymoss.github.io/post/%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E4%B9%8Bviper/</link>
      <pubDate>Thu, 25 May 2023 20:55:37 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E4%B9%8Bviper/</guid>
      <description>[toc] 文章介绍 本文我们将来介绍一下如何从第三方包viper来获取配置文件的配置信息，以及开发模式下的配置和上线产品如何使用进行viper做配置映</description>
    </item>
    
    <item>
      <title>Grpc详解</title>
      <link>https://iceymoss.github.io/post/grpc/grpc%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 25 May 2023 20:46:29 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/grpc/grpc%E8%AF%A6%E8%A7%A3/</guid>
      <description>[toc] 文章介绍 在阅读本文之前建议您先阅读RPC核心概念理解和GRPC之protobuf理解，在本文中我们不再过多介绍GRPC的基础部分，主要介绍</description>
    </item>
    
    <item>
      <title>GRPC之protobuf详解</title>
      <link>https://iceymoss.github.io/post/grpc/grpc%E4%B9%8Bprotobuf%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 25 May 2023 20:45:41 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/grpc/grpc%E4%B9%8Bprotobuf%E8%AF%A6%E8%A7%A3/</guid>
      <description>[toc] 文章介绍 本文主要介绍我学习 protobuf 的理解和总结、主要介绍 protobuf 的基本类型、option 的作用、proto 文件中导入其他 proto 文件、嵌套 message、e</description>
    </item>
    
    <item>
      <title>Rpc详解</title>
      <link>https://iceymoss.github.io/post/grpc/rpc%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 25 May 2023 20:44:59 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/grpc/rpc%E8%AF%A6%E8%A7%A3/</guid>
      <description>[toc] 文章介绍 本文主要介绍 RPC 是什么， 为什么要使用 RPC，使用 RPC 需要解决问题及 RPC 使用实例 RPC 是什么 RPC Rpc（Remote Procedure Call）远程过程调用协议</description>
    </item>
    
    <item>
      <title>Md5加密</title>
      <link>https://iceymoss.github.io/post/md5%E5%8A%A0%E5%AF%86/</link>
      <pubDate>Thu, 25 May 2023 20:43:08 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/md5%E5%8A%A0%E5%AF%86/</guid>
      <description>[toc] MD5 是什么 全称为 消息摘要算法版本5 （Message Digest Algorithm 5） 它是一种 Hash 算法。 作用是为了信息安全。 md5特性： 不可逆性 &amp;mdash; 根据 MD5 值计算不出原始数据</description>
    </item>
    
    <item>
      <title>Sentinel限流熔断</title>
      <link>https://iceymoss.github.io/post/sentinel%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/</link>
      <pubDate>Thu, 25 May 2023 20:42:08 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/sentinel%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/</guid>
      <description>[toc] 文章介绍 本文将介绍什么是限流和熔断， alibaba开源的Sentinel、安装、实战 什么是限流\熔断\降级 限流：在我们的后天系统中，如果那</description>
    </item>
    
    <item>
      <title>「前端开发」css入门之选择器与伪类</title>
      <link>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91css%E5%85%A5%E9%97%A8%E4%B9%8B%E9%80%89%E6%8B%A9%E5%99%A8%E4%B8%8E%E4%BC%AA%E7%B1%BB/</link>
      <pubDate>Thu, 25 May 2023 20:21:43 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91css%E5%85%A5%E9%97%A8%E4%B9%8B%E9%80%89%E6%8B%A9%E5%99%A8%E4%B8%8E%E4%BC%AA%E7%B1%BB/</guid>
      <description>[toc] 标签选择器 就是使用html标签名作为选择器，进行css样式的添加 /* 将选择html页面中所有的h3标签，无论h3标签位置的深浅 */ h3 { color: blueviolet; background-color: rgb(26,</description>
    </item>
    
    <item>
      <title>「前端开发」css入门之基础语法</title>
      <link>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91css%E5%85%A5%E9%97%A8%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 25 May 2023 20:21:03 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91css%E5%85%A5%E9%97%A8%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</guid>
      <description>[toc] 概况 CSS中文名：层叠式样式表，用来给html添加样式的语言 前端三层 分类 语言 功能 结构层 HTML 搭建结构、放置部件、语义描述 样式层 CSS 美化页面、实现</description>
    </item>
    
    <item>
      <title>「前端开发」html入门表单与属性</title>
      <link>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E8%A1%A8%E5%8D%95%E4%B8%8E%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Thu, 25 May 2023 20:20:21 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E8%A1%A8%E5%8D%95%E4%B8%8E%E5%B1%9E%E6%80%A7/</guid>
      <description>[toc] 表单的创建 表单是什么 表单是用来采集信息，比如我们的登录、注册、发表评论、购买商品等等，都需要使用表单来提交信息然后给到后台服务器。 表单标签</description>
    </item>
    
    <item>
      <title>「前端开发」html入门表格标签与属性</title>
      <link>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E8%A1%A8%E6%A0%BC%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Thu, 25 May 2023 20:19:41 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E8%A1%A8%E6%A0%BC%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%B1%9E%E6%80%A7/</guid>
      <description>[toc] 表格标签 table table用来定义表格 &amp;lt;table&amp;gt;&amp;lt;/table&amp;gt; tr 定义表格的行 &amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;第一行&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;第二行&amp;lt;</description>
    </item>
    
    <item>
      <title>「前端开发」html入门多媒体和语义化</title>
      <link>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E5%A4%9A%E5%AA%92%E4%BD%93%E5%92%8C%E8%AF%AD%E4%B9%89%E5%8C%96/</link>
      <pubDate>Thu, 25 May 2023 20:18:48 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E5%A4%9A%E5%AA%92%E4%BD%93%E5%92%8C%E8%AF%AD%E4%B9%89%E5%8C%96/</guid>
      <description>[toc] 概况 下面我们来介绍一下多媒体和语义化标签的使用 音频audio autoplay属性 autoplay会自动播放音频，但是有点浏览器可能会不允许</description>
    </item>
    
    <item>
      <title>「前端开发」html入门列表标签</title>
      <link>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E5%88%97%E8%A1%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Thu, 25 May 2023 20:17:39 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E5%88%97%E8%A1%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>[toc] 概况 我们下面来学习html的三种列表 标签 标签名称 &amp;lt;ul&amp;gt;&amp;lt;/ul&amp;gt; 无序列表 &amp;lt;ol&amp;gt;&amp;lt;/ol&amp;gt; 有序列表 &amp;lt;dl&amp;gt;&amp;lt;/dl&amp;gt; 定义列表 无序列表 无序列表指没有刻意的排序, 无序列表使用&amp;lt;ul&amp;</description>
    </item>
    
    <item>
      <title>「前端开发」html入门之初识html</title>
      <link>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E4%B9%8B%E5%88%9D%E8%AF%86html/</link>
      <pubDate>Thu, 25 May 2023 20:16:48 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91html%E5%85%A5%E9%97%A8%E4%B9%8B%E5%88%9D%E8%AF%86html/</guid>
      <description>[toc] html骨架 在详细信息html前先看一下html的基本骨架 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;小慕医生&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;#34;Description&amp;#34;,</description>
    </item>
    
    <item>
      <title>数据结构之trie树</title>
      <link>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Btrie%E6%A0%91/</link>
      <pubDate>Thu, 25 May 2023 20:13:12 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Btrie%E6%A0%91/</guid>
      <description>[toc] 数据结构之Trie树 Trie定义 Trie 树，也叫「前缀树」或「字典树」，顾名思义，它是一个树形结构，专门用于处理字符串匹配，用来解决在一组字符串</description>
    </item>
    
    <item>
      <title>数据结构之并查集</title>
      <link>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%B9%B6%E6%9F%A5%E9%9B%86/</link>
      <pubDate>Thu, 25 May 2023 20:12:18 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid>
      <description>[toc] 并查集基础 概念及其介绍 并查集是一种树型结构，用于处理一些不相交集合的合并及查询问题。 并查集的思想是用一个数组表示了整片森林（parent）</description>
    </item>
    
    <item>
      <title>数据结构之二分搜索树</title>
      <link>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E6%A0%91/</link>
      <pubDate>Thu, 25 May 2023 20:11:27 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E6%A0%91/</guid>
      <description>[toc] 概念及其介绍 概念 二分搜索树（英语：Binary Search Tree），也称为 二叉查找树 、二叉搜索树 、有序二叉树或排序二叉树。满足以下几个条件： 每个节</description>
    </item>
    
    <item>
      <title>数据结构之堆及堆排序</title>
      <link>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%A0%86%E5%8F%8A%E5%A0%86%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Thu, 25 May 2023 20:10:08 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%A0%86%E5%8F%8A%E5%A0%86%E6%8E%92%E5%BA%8F/</guid>
      <description>[toc] 堆的定义 ***堆（heap）***是计算机科学中一类特殊的数据结构的统称。堆通常是一个可以被看做一棵树的数组对象。堆总是满足下列性质： 堆中</description>
    </item>
    
    <item>
      <title>排序算法之选择排序</title>
      <link>https://iceymoss.github.io/post/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Thu, 25 May 2023 20:09:00 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</guid>
      <description>[toc] 介绍 选择排序是一种简单直观的排序算法，无论什么数据进去都是 O(n²) 的时间复杂度。所以用到它的时候，数据规模越小越好。唯一的好处可能就是不</description>
    </item>
    
    <item>
      <title>MySQL知识总结</title>
      <link>https://iceymoss.github.io/post/mysql%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 25 May 2023 19:43:09 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/mysql%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</guid>
      <description>[toc] 基础篇 MySQL的数据类型 MySQL 中定义数据字段的类型对你数据库的优化是非常重要的。 MySQL 支持多种类型，大致可以分为三类：数值、日期/时间和字符串(</description>
    </item>
    
    <item>
      <title></title>
      <link>https://iceymoss.github.io/post/api%E6%96%87%E6%A1%A3%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://iceymoss.github.io/post/api%E6%96%87%E6%A1%A3%E8%AF%B4%E6%98%8E/</guid>
      <description>接口说明 所有教室的所有课程 api地址 http://1.14.180.202:8080/v1/course/list 参数说明 名称 方法类型 参数 课程列表 get 无 获取某教室一天的课程 api地址 http://1.14.180.202:8080/v1/course/course_cw?room_id=x&amp;amp;day=y 参数说明 名称 方法类型 参数 教室日课程</description>
    </item>
    
  </channel>
</rss>
