<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on iceymoss - 刻意练习，卷无止境</title>
    <link>https://iceymoss.github.io/tags/redis/</link>
    <description>Recent content in Redis on iceymoss - 刻意练习，卷无止境</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 13 Jun 2023 16:07:28 +0800</lastBuildDate><atom:link href="https://iceymoss.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>「从0到1搭建一个IM项目」参数配置之基于viper的配置化</title>
      <link>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E4%B9%8B%E5%9F%BA%E4%BA%8Eviper%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8C%96/</link>
      <pubDate>Tue, 13 Jun 2023 16:07:28 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E4%B9%8B%E5%9F%BA%E4%BA%8Eviper%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8C%96/</guid>
      <description>[toc] 概况 到目前为止我们已经对I项目的基本业务开发完毕了，接下来我们需要将项目里涉及到的所有参数进行配置化，编辑配置文件，对于go开发做参数配置</description>
    </item>
    
    <item>
      <title>「从0到1搭建一个IM项目」消息模块开发之信息分类与Redis的引入</title>
      <link>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BF%A1%E6%81%AF%E5%88%86%E7%B1%BB%E4%B8%8Eredis%E7%9A%84%E5%BC%95%E5%85%A5/</link>
      <pubDate>Fri, 09 Jun 2023 21:21:40 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BF%A1%E6%81%AF%E5%88%86%E7%B1%BB%E4%B8%8Eredis%E7%9A%84%E5%BC%95%E5%85%A5/</guid>
      <description>[toc] 概况 前面我们已经完成了单聊模式的开发，并且已经完成了测试同时对信息发送流程进行了升级改造引入了udp，在本篇内容中，我们将开始完善聊天功能</description>
    </item>
    
    <item>
      <title>「从0到1搭建一个IM项目」消息模块开发之消息核心升级改造</title>
      <link>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E4%B9%8B%E6%B6%88%E6%81%AF%E6%A0%B8%E5%BF%83%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0/</link>
      <pubDate>Mon, 05 Jun 2023 16:21:39 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E4%B9%8B%E6%B6%88%E6%81%AF%E6%A0%B8%E5%BF%83%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0/</guid>
      <description>[toc] 概况 到目前为止，我们已经将IM项目的信息发送接收逻辑完成了，但是这里我们要进一步完善，我们需要将这个过程提高并发量，这里我们需要将消息模块</description>
    </item>
    
    <item>
      <title>「从0到1搭建一个IM项目」消息模块开发之消息体的设计</title>
      <link>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E4%B9%8B%E6%B6%88%E6%81%AF%E4%BD%93%E7%9A%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Mon, 05 Jun 2023 16:16:15 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/golang/hichat/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAim%E9%A1%B9%E7%9B%AE%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E4%B9%8B%E6%B6%88%E6%81%AF%E4%BD%93%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>[toc] 概况 经过前四篇文章的讲解，完成了用户模块的开发，下面就进入到了IM项目的核心模块，即信息模块，这部分内容我们主要介绍信息结构的设计，信息的</description>
    </item>
    
    <item>
      <title>分布式锁实现方案</title>
      <link>https://iceymoss.github.io/post/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 31 May 2023 19:56:55 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/post/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</guid>
      <description>[toc] 前言 分布式锁 悲观锁与乐观锁是人们定义出来的概念，你可以理解为一种思想，是处理并发资源的常用手段。 不要把他们与mysql中提供的锁机制(表锁</description>
    </item>
    
    <item>
      <title>Redis知识总结</title>
      <link>https://iceymoss.github.io/golang/redis%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 10 May 2023 23:41:45 +0800</pubDate>
      
      <guid>https://iceymoss.github.io/golang/redis%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</guid>
      <description>[toc] Redis入门 概述 Redis是什么 Redis（Remote Dictionary Serve），即远程字典服务 Redis能干嘛？ 1、内存存储，持久化，内存中是断</description>
    </item>
    
  </channel>
</rss>
